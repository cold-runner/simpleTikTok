// Code generated by MockGen. DO NOT EDIT.
// Source: iface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	SocialService "github.com/cold-runner/simpleTikTok/kitex_gen/SocialService"
	gomock "go.uber.org/mock/gomock"
)

// MockUserRpc is a mock of UserRpc interface.
type MockUserRpc struct {
	ctrl     *gomock.Controller
	recorder *MockUserRpcMockRecorder
}

// MockUserRpcMockRecorder is the mock recorder for MockUserRpc.
type MockUserRpcMockRecorder struct {
	mock *MockUserRpc
}

// NewMockUserRpc creates a new mock instance.
func NewMockUserRpc(ctrl *gomock.Controller) *MockUserRpc {
	mock := &MockUserRpc{ctrl: ctrl}
	mock.recorder = &MockUserRpcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRpc) EXPECT() *MockUserRpcMockRecorder {
	return m.recorder
}

// GetUserInfo mocks base method.
func (m *MockUserRpc) GetUserInfo(arg0 int64) (*SocialService.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo", arg0)
	ret0, _ := ret[0].(*SocialService.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockUserRpcMockRecorder) GetUserInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockUserRpc)(nil).GetUserInfo), arg0)
}
