syntax = "proto3";
package user;
option go_package ="UserService";
import "idl/BaseResp.proto";

message User {
  int64 id = 1;
  string name = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  bool is_follow = 5;
  string  avatar = 6;
  string background_image  = 7;
  string signature = 8;
  int64 total_favorited = 9;
  int64 work_count = 10;
  int64 favorite_count = 11;
}

// 用户注册
message UserRegisterRequest {
  string username = 1;
  string password = 2;
}

message UserRegisterResponse {
  baseResp.BaseResp base_resp = 1;
  int64 id = 2;
}

// 用户登录
message UserLoginRequest {
  string username = 1;
  string password = 2;
}

message UserLoginResponse {
  baseResp.BaseResp base_resp = 1;
  int64 id = 2;
}

// 用户信息
message UserInfoRequest {
  int64 fromId = 1;
  int64 toId = 2;
}

message UserInfoResponse {
  baseResp.BaseResp base_resp = 1;
  User user = 2;
}

// 修改用户关注数
message ChangeUserFollowCountRequest {
  int64 id = 1;
  int64 to_user_id = 2;
  int32 action_type = 3;
}
// 获取多个用户信息
message MGetUserInfoRequest {
  repeated int64 uids = 1;
}

message MGetUserInfoResponse {
  baseResp.BaseResp base_resp = 1;
  repeated User users = 2;
}

// 修改用户获赞数量
message ChangeUserTotalFavoritedCountRequest {
  int64 id = 1;
  int32 action_type = 2; // 1-增加，2-减少
}

// 修改用户作品数量
message ChangeUserWorkCountRequest {
  int64 id = 1;
  int32 action_type = 2; // 1-增加，2-减少
}

// 修改用户喜欢(点赞)数量
message ChangeUserFavoriteCountRequest {
  int64 id = 1;
  int32 action_type = 2; // 1-增加，2-减少
}

message UpdateUserInfoResponse {
  baseResp.BaseResp base_resp = 1;
}

service UserService {
  rpc Register(UserRegisterRequest) returns (UserRegisterResponse) {}
  rpc Login(UserLoginRequest) returns (UserLoginResponse) {}
  rpc GetUserInfo(UserInfoRequest) returns (UserInfoResponse) {}
  rpc MGetUserInfo(MGetUserInfoRequest) returns(MGetUserInfoResponse) {}
  // 用户信息更新相关服务
  rpc ChangeUserFollowCount(ChangeUserFollowCountRequest) returns (baseResp.BaseResp) {}
  rpc ChangeUserTotalFavoritedCount(ChangeUserTotalFavoritedCountRequest) returns (UpdateUserInfoResponse) {}
  rpc ChangeUserWorkCount(ChangeUserWorkCountRequest) returns (UpdateUserInfoResponse) {}
  rpc ChangeUserFavoriteCount(ChangeUserFavoriteCountRequest) returns (UpdateUserInfoResponse) {}
}