syntax = "proto3";

package ApiServer;

option go_package = "ApiServer";

import "api.proto";

message BaseResp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述--可选
}

message User {
  int64 id = 1;
  string name = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  bool is_follow = 5;
  string  avatar = 6;
  string background_image  = 7;
  string signature = 8;
  int64 total_favorited = 9;
  int64 work_count = 10;
  int64 favorite_count = 11;
}

// 用户注册
message UserRegisterRequest {
  string username = 1[(api.query)="username", (api.vd)="len($) <= 32"];// 注册用户名，最长32个字符
  string password = 2[(api.query)="password", (api.vd)="len($) <= 32"];// 密码，最长32个字符
}

message UserRegisterResponse {
  BaseResp base_resp = 1;
  int64 user_id = 2; // 用户id
  string token = 3; // 用户鉴权token
}
// 用户登录
message UserLoginRequest {
  string username = 1[(api.query)="username", (api.vd)="len($) <= 32"];// 用户名，最长32个字符
  string password = 2[(api.query)="password", (api.vd)="len($) <= 32"];// 密码，最长32个字符
}

message UserLoginResponse {
  BaseResp base_resp = 1;
  int64 user_id = 2; // 用户id
  string token = 3; // 用户鉴权token
}

// 获取用户信息
message UserInfoRequest {
  int64 user_id = 1[(api.query)="user_id"]; // 用户id
  string token = 2[(api.query)="token"]; // 用户鉴权token
}

message UserInfoResponse {
  BaseResp base_resp = 1;
  User user = 2;
}

service ApiService {
  // Base api
  rpc Register (UserRegisterRequest) returns (UserRegisterResponse)  {option (api.post) = "/douyin/user/register/";}
  rpc Login (UserLoginRequest) returns (UserLoginResponse) {option (api.post) = "/douyin/user/login/";}
  rpc GetUserInfo (UserInfoRequest) returns (UserInfoResponse) {option (api
      .get) = "/douyin/user/";}
}