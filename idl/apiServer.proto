syntax = "proto3";

package ApiServer;

option go_package = "ApiServer";

import "idl/api.proto";

message BaseResp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述--可选
}

message User {
  int64 id = 1;
  string name = 2;
  int64 follow_count = 3;
  int64 follower_count = 4;
  bool is_follow = 5;
  string  avatar = 6;
  string background_image  = 7;
  string signature = 8;
  int64 total_favorited = 9;
  int64 work_count = 10;
  int64 favorite_count = 11;
}

message Video {
  int64 id = 1; // 视频唯一标识
  User author = 2; // 视频作者信息
  string play_url = 3; // 视频播放地址
  string cover_url = 4; // 视频封面地址
  int64 favorite_count = 5; // 视频的点赞总数
  int64 comment_count = 6; // 视频的评论总数
  bool is_favorite = 7; // true-已点赞，false-未点赞
  string title = 8; // 视频标题
}

message Comment {
  int64 id = 1;
  User user = 2;
  string content = 3;
  string create_date = 4; //格式mm-dd
}


// 用户注册
message UserRegisterRequest {
  string username = 1[(api.query)="username", (api.vd)="len($) <= 32"];// 注册用户名，最长32个字符
  string password = 2[(api.query)="password", (api.vd)="len($) <= 32"];// 密码，最长32个字符
}

message UserRegisterResponse {
  BaseResp base_resp = 1;
  int64 user_id = 2; // 用户id
  string token = 3; // 用户鉴权token
}
// 用户登录
message UserLoginRequest {
  string username = 1[(api.query)="username", (api.vd)="len($) <= 32"];// 用户名，最长32个字符
  string password = 2[(api.query)="password", (api.vd)="len($) <= 32"];// 密码，最长32个字符
}

message UserLoginResponse {
  BaseResp base_resp = 1;
  int64 user_id = 2; // 用户id
  string token = 3; // 用户鉴权token
}

// 获取用户信息
message UserInfoRequest {
  int64 user_id = 1[(api.query)="user_id"]; // 用户id
  string token = 2[(api.query)="token"]; // 用户鉴权token
}

message UserInfoResponse {
  BaseResp base_resp = 1;
  User user = 2;
}

// 用户关注
message UserRelationRequest {
  string token = 1[(api.query)="token"]; // 用户鉴权token
  int64 to_user_id = 2[(api.query)="to_user_id", (api.vd)="$ > 0"]; // // 被关注用户id，必须大于0
  int32 action_type = 3[(api.query)="action_type" , (api.vd)="$ == 1 || $ ==2"];  // 1-关注，2-取消关注
}

message UserRelationResponse {
  BaseResp base_resp = 1;
}

// 用户关注列表
message UserFollowListRequest {
  int64 user_id = 1[(api.query)="user_id"]; // 用户id
  string token = 2[(api.query)="token"]; // 用户鉴权token
}

message UserFollowListResponse {
  BaseResp base_resp = 1;
  repeated User user_list = 2;
}

// 用户粉丝列表
message UserFollowerListRequest {
  int64 user_id = 1[(api.query)="user_id"]; // 用户id
  string token = 2[(api.query)="token"]; // 用户鉴权token
}

message UserFollowerListResponse {
  BaseResp base_resp = 1;
  repeated User user_list = 2;
}

// Video ---------------------------------------------------------

// 视频投稿
message PublishActionRequest {
  bytes data = 1[(api.form)="data"];
  string token = 2[(api.form)="token"];
  string title = 3[(api.form)="title"];
}

message PublishActionResponse {
  BaseResp base_resp = 1;
}
// 视频发布列表
message PublishListRequest {
  string token = 1[(api.query)="token"];
  int64 user_id = 2[(api.query)="user_id"];
}

message PublishListResponse {
  BaseResp base_resp = 1;
  repeated Video video_list = 2;
}

// 视频流
message FeedRequest {
  int64 latest_time = 1[(api.query)="latest_time", (api.vd)="len($) > 0"];// 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  string token = 2[(api.query)="token"];// 可选参数，登录用户设置
}

message FeedResponse {
  BaseResp base_resp = 1;
  int64 next_time = 2;
  repeated Video video_list = 3;
}

// Social ---------------------------------------------------------

// 视频点赞/取消赞操作
message FavoriteActionRequest {
  string token = 1[(api.query)="token"];
  int64 video_id = 2[(api.query)="video_id"];
  int32 action_type = 3[(api.query)="action_type"];
}

message FavoriteActionResponse {
  BaseResp base_resp = 1;
}

// 获取视频喜欢列表
message FavoriteListRequest {
  string token = 1[(api.query)="token"];
  int64 user_id = 2[(api.query)="user_id"];
}

message FavoriteListResponse {
  BaseResp base_resp = 1;
  repeated Video video_list = 2;
}

// 评论操作
message CommentActionRequest {
  string token = 1[(api.query)="token"];
  int64 video_id = 2[(api.query)="video_id"];
  int32 action_type = 3[(api.query)="action_type"];
  string comment_text = 4[(api.query)="comment_text"];
  int64 comment_id = 5[(api.query)="comment_id"];
}

message CommentActionResponse {
  BaseResp base_resp = 1;
  Comment comment = 2;
}

// 评论列表
message VideoCommentListRequest {
  string token = 1[(api.query)="token"];
  int64 video_id = 2[(api.query)="video_id"];
}

message VideoCommentListResponse {
  BaseResp base_resp = 1;
  repeated Comment comment_list = 2;
}


service ApiService {
  // Base api
  rpc Register (UserRegisterRequest) returns (UserRegisterResponse)  {option (api.post) = "/douyin/user/register/";}
  rpc Login (UserLoginRequest) returns (UserLoginResponse) {option (api.post) = "/douyin/user/login/";}
  rpc GetUserInfo (UserInfoRequest) returns (UserInfoResponse) {option (api.get) = "/douyin/user/";}
  rpc RelationAction (UserRelationRequest) returns (UserRelationResponse) {option (api.post) = "/douyin/relation/action/";}
  rpc GetFollowList (UserFollowListRequest) returns (UserFollowListResponse) {option (api.get) = "/douyin/relation/follow/list/";}
  rpc GetFollowerList (UserFollowerListRequest) returns (UserFollowerListResponse) {option (api.get) = "/douyin/relation/follower/list/";}
  // Video
  rpc Feed(FeedRequest) returns (FeedResponse) {option (api.get) = "/douyin/feed/";}
  rpc PublishAction(PublishActionRequest) returns (PublishActionResponse) {option (api.post) = "/douyin/publish/action/";}
  rpc PublishList(PublishListRequest) returns (PublishListResponse) {option (api.get) = "/douyin/publish/list/";}
  // Social
  rpc FavoriteAction(FavoriteActionRequest) returns (FavoriteActionResponse) {option (api.post) = "/douyin/favorite/action/";}
  rpc FavoriteList(FavoriteListRequest) returns (FavoriteListResponse) {option (api.get) = "/douyin/favorite/list/";}
  rpc CommentAction(CommentActionRequest) returns (CommentActionResponse) {option (api.post) = "/douyin/comment/action/";}
  rpc VideoCommentList(VideoCommentListRequest) returns (VideoCommentListResponse) {option (api.get) = "/douyin/comment/list/";}
}